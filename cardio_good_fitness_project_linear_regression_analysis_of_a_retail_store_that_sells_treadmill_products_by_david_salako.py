# -*- coding: utf-8 -*-
"""Cardio Good Fitness Project - Linear Regression Analysis Of A Retail Store That Sells Treadmill Products - By David Salako.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EHg47-PrrPCA1rlme5dkTEI2DlQbU5UD

# **Cardio Good Fitness Project - Linear Regression Analysis Of A Retail Store That Sells Treadmill Products - By David Salako.**

# BACKGROUND:

    Cardio Good Fitness is a retail store that sells treadmill products. 
    The organization has collected customer data that contains the following 9 variables:

        1.	Product - the model no. of the treadmill
        2.	Age - in no of years, of the customer
        3.	Gender - of the customer
        4.	Education - in no. of years, of the customer
        5.	Marital Status - of the customer
        6.	Usage - Average number of times the customer wants to use the treadmill every week
        7.	Fitness - Self rated fitness score of the customer (5 - very fit, 1 - very unfit)
        8.	Income - of the customer
        9.	Miles- expected to run

# OBJECTIVE:

    1.	Come up with a customer profile (charactersitics of a customer) of the different treadmill products.
    2.	Perform uni-variate and multi-variate analyses.
    3.	Generate a set of insights and recommendations that will help the company target new customers.
    
# KEY QUESTIONS TO BE ANSWERED:

    1.	Who buys and uses the different treadmill product?
    2.	Use those customer profiles so that Cardio Good Fitness can tailor their products so that they can get maximun value for the resources they put into the products and target new customers.

# DATASET:

    The data is for customers of the treadmill product(s) of a retail store called Cardio Good Fitness. 
    It contains the following variables:

    1.	Product - the model no. of the treadmill purchased by the individual customer
    2.	Age - in no of years, of the customer
    3.	Gender - of the customer
    4.	Education - in no. of years, of the customer
    5.	Marital Status - relationship status of the customer
    6.	Usage - average number of times the customer expects to use the treadmill every week
    7.	Fitness - self rated fitness score of the customer (5 - very fit, 1 - very unfit)
    8.	Income - household income of the customer
    9.	Miles - expected to run
"""

# Commented out IPython magic to ensure Python compatibility.
# For my analysis, I will be using Python libraries such as pandas for the 
# data manipulation, as well as seaborn and matplotlib for the data visualizations.

# Importing the relevant Python files for:
# Univariate & Multivariate Analyses

import pandas as pd
import numpy as np
import seaborn as sns

import matplotlib.pyplot as plt   # seaborn is based on matplotlib
sns.set(color_codes=True)   # adds a nice background to the graphs
# %matplotlib inline   
# tells matplotlib to display the graphs

import warnings
warnings.filterwarnings('ignore')   # I would like to suppress some of the more superflous Python warnings 
from PIL import Image

CGFPdf = pd.read_csv('CardioGoodFitness.csv') 
# The new dataframe is called CGFPdf and data is loaded from the relevant .csv file

CGFPdf.head(50) # view the first 50 rows of the dataset

CGFPdf.tail(50) # view the last 50 rows of the dataset

"""OBSERVATIONS ABOVE: The dataset looks clean and consistent with the description provided in the Data Dictionary."""

CGFPdf.shape

"""OBSERVATIONS ABOVE: There are 180 records (rows) and 9 fields (columns).

Check for missing datapoints in the data set.
"""

CGFPdf.isna().any()

"""OBSERVATIONS ABOVE: There are no missing values in this data set.

Check the datatype of the variables to make sure that the data has been read in properly.
"""

CGFPdf.dtypes

CGFPdf.info()

"""OBSERVATIONS ABOVE:
 
  1. Product is object data type, equivalent to a string data type.
  2. Age is an integer datatype.
  3. Gender is Product is object data type, equivalent to a string data type.
  4. Education is an integer data type.
  5. MaritalStatus is object data type, equivalent to a string data type.
  6. Usage is an integer data type.
  7. Fitness is an integer data type.
  8. Income is an integer data type.
  9. Miles is an integer data type.

## Fixing the data types
* All variables that are integer are valid data types with the except of Fitness. Fitness is a subjective rating given by a customer for self-fitness on a scale of 1 to 5, it should be treated as a category data type.

* Product, Gender and Marital Status are each of the object data type; they  can be converted to the category data type.

`coverting "objects" to "category" reduces the data space required to store the dataframe, eases computation and increases resource efficiency`
"""

CGFPdf["Product"]=CGFPdf["Product"].astype("category")
CGFPdf["Gender"]=CGFPdf["Gender"].astype("category")
CGFPdf["MaritalStatus"]=CGFPdf["MaritalStatus"].astype("category")
CGFPdf["Fitness"]=CGFPdf["Fitness"].astype("category")

CGFPdf.info()

"""OBSERVATIONS ABOVE:
 
Product, Gender, Marital Status and Fitness have been converted to category data types.

`it is observed that the memory usage has decreased from 12.8KB to 8.3KB`

## Give a statistical summary for the dataset.
"""

CGFPdf.describe()

"""OBSERVATIONS ABOVE: 

* The mean of Age is greater than the median, this suggests that Age is right skewed.
* Education, Usage, and Fitness have approximately the same mean and median.
* The mean is greater than the median for the Income and Miles variables which suggests that these variables are right skewed.

* Age - the average ago of their customers is 28.79 years old, ranging from 18 tears old to 50 years old. 
The median age is 26 years old.

* Education - the average number of years of education is 15.57 years, ranging from 12 years to 21 years. This makes sense and rings true when compared to the age ranges mentioned above.

* Usage - the mean average number of times a week that the customer expects to use the treadmill model that has been purchased.

* Fitness - the average self rated level of fitness is 3.3 on a 1-5 scale. As expected in a suspected normal distribution the minimum is 1.0, the median is 3.0, and the maximum is 5.0.

* Income - the average household income declared is 52,719.58 U.S. Dollars. The lowest income is 29562 U.S. Dollars, the median income is 50596.50 U.S. Dollars, and the higest houselhold income reported 104581 U.S. Dollars.

* Miles - the average number of miles the customer expects to run each week is 103 miles. This seems like a high number, almost the equivalent of 4 marathons a week. The minimum is 21 miles, the median is 94 miles, and the maximum is 360 miles per week! Very high numbers!
"""

CGFPdf.describe(include=["category"])

"""### Check for missing values.

* Product has three types of treadmill models, TM195 being the most sold model.
* Males(104) have purchased most products compared to females(76).
* Married customers(107) have purchased the most products compared to singles(73)
* Most customers(97) rate them as 3 on a scale of 1 to 5 in Fitness levels.
"""

CGFPdf.isnull().sum()

"""OBSERVATIONS ABOVE: 

* There are no missing values in the data.

## EXPLORATORY DATA ANALYSIS

### Univariate analysis
"""

# While performing univariate analysis of numerical variables we want to study their central tendency 
# and dispersion.
# Let us write a function that will help us create boxplot and histogram for any input numerical 
# variable.
# This function takes the numerical column as the input and returns the boxplots 
# and histograms for the variable.
# Let us see if this help us write faster and cleaner code.
def histogram_boxplot(feature, figsize=(15,10), bins = None):
    """ Boxplot and histogram combined
    feature: 1-d feature array
    figsize: size of fig (default (9,8))
    bins: number of bins (default None / auto)
    """
    f2, (ax_box2, ax_hist2) = plt.subplots(nrows = 2, # Number of rows of the subplot grid= 2
                                           sharex = True, # x-axis will be shared among all subplots
                                           gridspec_kw = {"height_ratios": (.25, .75)}, 
                                           figsize = figsize 
                                           ) # creating the 2 subplots
    sns.boxplot(feature, ax=ax_box2, showmeans=True, color='violet') # boxplot will be created and a star will indicate the mean value of the column
    sns.distplot(feature, kde=F, ax=ax_hist2, bins=bins,palette="winter") if bins else sns.distplot(feature, kde=False, ax=ax_hist2) # For histogram
    ax_hist2.axvline(np.mean(feature), color='green', linestyle='--') # Add mean to the histogram
    ax_hist2.axvline(np.median(feature), color='black', linestyle='-') # Add median to the histogram

"""####**Observations on Age.**





"""

histogram_boxplot(CGFPdf["Age"])

"""OBSERVATIONS ABOVE:

* The distribution of Age is right skewed.
* There are a outliers in this variable.
* From boxplot we can see that the third quartile(Q3) is equal to 33 which means 75% of customers are below the age of 33.

####**Observations on Education.**
"""

histogram_boxplot(CGFPdf["Education"])

"""OBSERVATIONS ABOVE:

* Mean education for customers is 15.5 years.
* There are a few outliers present in data (customers who have education of more than 18 years).

####**Observations on Usage.**
"""

histogram_boxplot(CGFPdf["Usage"])

"""OBSERVATIONS ABOVE:

* Customers want to use the treadmills 3-4 times a week on an average.
* There are few outliers, customers who wish to use treadmills 6-7 times a week.

#### **Observations on Income.**
"""

histogram_boxplot(CGFPdf["Income"])

"""OBSERVATIONS ABOVE:

* Mean income of customers who bought treadmill is around 55000.
* Income is right skewed.
* It has many ouliers towards the higher end.

#### **Observations on Miles.**
"""

histogram_boxplot(CGFPdf["Miles"])

"""OBSERVATIONS ABOVE:

* Most customers expect to run 100 miles per week.
* Miles is right skewed	
* There are outliers present, some customers expect to run more than 200 miles per week, some customers wish to run more than 350 miles per week this could be an error in data collection or perhaps professional runners purchased the product.
"""

# Function to create barplots that indicate percentage for each category.

def perc_on_bar(plot, feature):
    '''
    plot
    feature: categorical feature
    the function won't work if a column is passed in hue parameter
    '''
    total = len(feature) # length of the column
    for p in ax.patches:
        percentage = '{:.1f}%'.format(100 * p.get_height()/total) # percentage of each class of the category
        x = p.get_x() + p.get_width() / 2 - 0.05 # width of the plot
        y = p.get_y() + p.get_height()           # hieght of the plot
        ax.annotate(percentage, (x, y), size = 12) # annotate the percantage 
    plt.show() # show the plot

"""#### **Observations on Product.**"""

plt.figure(figsize=(15,5))
ax = sns.countplot(CGFPdf["Product"],palette='winter')
perc_on_bar(ax,CGFPdf["Product"])

"""OBSERVATIONS ABOVE:

* The best selling product is TM195(44.4%), followed by TM498(33.3%), and TM798(22.2%).

#### **Observations on Gender.**
"""

plt.figure(figsize=(15,5))
ax = sns.countplot(CGFPdf["Gender"],palette='winter')
perc_on_bar(ax,CGFPdf["Gender"])

"""OBSERVATIONS ABOVE:

* There are more males customers(57.8%) than females(42.2%).

#### **Observations on Marital Status.**
"""

plt.figure(figsize=(15,5))
ax = sns.countplot(CGFPdf["MaritalStatus"],palette='winter')
perc_on_bar(ax,CGFPdf["MaritalStatus"])

"""OBSERVATIONS ABOVE:

* 40.6% of customers are single while 59.4% of customers have a partner.

#### **Observations on Fitness.**
"""

plt.figure(figsize=(15,5))
ax = sns.countplot(CGFPdf["Fitness"],palette='winter')
perc_on_bar(ax,CGFPdf["Fitness"])

"""OBSERVATIONS ABOVE:

* 53.9% of the customers have rated them at 3 on a scale of 5 (1 being the least fit and 5 being the most fit),followed by 5 rating (17.2%).

#### **Observations on Education.**

* We saw earlier that years of education has a mean of 15.5 years of education, let us check what the proportion of each level of education among our customer population is.
"""

plt.figure(figsize=(15,5))
ax = sns.countplot(CGFPdf["Education"],palette='winter')
perc_on_bar(ax,CGFPdf["Education"])

"""OBSERVATIONS ABOVE:

* 47.2% of customers have 16 years of education, followed by 14 years of education(30.6%).

#### **Observations on Usage.**

* We saw earlier that customers wish to use products for 3-4 days in a week, let's check what is the proportion of each level of usage among our customer population.
"""

plt.figure(figsize=(10,5))
ax = sns.countplot(CGFPdf["Usage"],palette='winter')
perc_on_bar(ax,CGFPdf["Usage"])

"""OBSERVATIONS ABOVE:

* 38.3% of customers wish to use the product 3 times a week followed by 28.9% customers who wish to use the product 4 times a week.

Let us look at the same variables with distribution plots, Kernel Density Estimation (kde) curves, and box plots.
"""

# Set the style of the seaborn visualization object 
sns.set(style='darkgrid')

# Age histogram and boxplot visualization:

sns.distplot(CGFPdf['Age'],color='teal')
plt.show()
sns.boxplot(y='Age',data=CGFPdf)
plt.show()

"""The age range of treadmill buyers is from 18 to 50. Looking at the boxplot, the middle 50% of treadmill buyers are 24 and 33 years old. 25% of buyers are 24 and 26 years old. """

# Miles histogram and boxplot visualization::

sns.distplot(CGFPdf['Miles'],color='teal')
plt.show()
sns.boxplot(y='Miles',data=CGFPdf)
plt.show()

# Usage histogram and boxplot visualization:: 

sns.distplot(CGFPdf['Usage'],color='teal')
plt.show()
sns.boxplot(y='Usage',data=CGFPdf)
plt.show()

# Education histogram and boxplot visualization:: 
    
sns.distplot(CGFPdf['Education'],color='teal')
plt.show()
sns.boxplot(y='Education',data=CGFPdf)
plt.show()

"""OBSERVATIONS ABOVE:

The Education boxplot shows that the middle 50% of treadmill customers have 14 to 16 years of education. The most common (the mode) declared number of years of education is 16 years. 16 years equates to roughly a Bachelor's college degree level of education.
"""

# Income histogram and boxplot visualization:

sns.distplot(CGFPdf['Income'],color='teal')
plt.show()
sns.boxplot(y='Income',data=CGFPdf)
plt.show()

"""OBSERVATIONS ABOVE:

The Income of customers ranges between 29,582 Dollars and 104581 Dollars. According to the boxplot, the middle 50% of buyers earn between 44,058 Dollars and 58,668 Dollars.

#### **Expected Miles Per Usage Per Customer.**
"""

# EXPECTED MILES PER USAGE PER CUSTOMER
# A new variable called [Miles Per Usage] = [Miles] divided by [Usage]

CGFPdf["Miles Per Usage"] = (CGFPdf["Miles"])/(CGFPdf["Usage"])
CGFPdf.head(15)

# Miles Per Usage:

sns.distplot(CGFPdf['Miles Per Usage'],color='teal')
plt.title('Expected Miles Per Usage Per Customer')
plt.show()
sns.boxplot(y='Miles Per Usage',data=CGFPdf).set_title('Expected Miles Per Usage Per Customer')
plt.show()

"""OBSERVATIONS ABOVE:

* The Usage histogram is skewed to the right as mentioned earlier. The Usage 
boxplot shows 50% of treadmill buyers expect to use the treadmills 3 to 4 times a week; 3 times a week is the median.

* The Fitness histogram is skewed to left and 50% of the treadmill buyers rate their level of fitness between 3 and 4 according to the Fitness boxplot. Fitness level 3 is the most popular self rating, the mode.

* We can infer from the the Miles boxplotvisualization that the middle 50% of customers expect to run between 66 miles nd 116.5 miles every week. 

* Additionally, the Miles Per Usage boxplot visualizes 23.5 to 33 miles per use per customer in the middle 50%.

### Bivariate Analysis.
"""

plt.figure(figsize=(15,5))
sns.heatmap(CGFPdf.corr(),annot=True)
plt.show()

"""OBSERVATIONS ABOVE:

* Miles is highly correlated with Usage, a customer running more miles would mean he is also using the treadmill more. 
* Education and Income has a positive correlation, indicating higher the education higher would be the income.
* Income shows a positive correlation with Age , Usage, and Miles.
* A positive correlation between age and income is expected but a high poistive correlation of income with usage and miles should be investigated further.
"""

sns.pairplot(data=CGFPdf.drop(["Fitness"],axis=1),hue="Product")
plt.show()

"""OBSERVATIONS ABOVE:

* We can see varying distributions in variables for different products, we should investigate further.

#### **Gender vs. Age.**
"""

# Let us compare Gender and Age in a boxplot display

sns.boxplot(x="Gender", y="Age", data=CGFPdf).set_title('Age Distribution by Gender');

"""OBSERVATIONS ABOVE:

* There is a slighly wider range of ages among male buyers (18 to 47) compared to 
female customers (19 to 46).
* The median ages (26/27) of both genders are similar.

#### **Product vs. Age.**
"""

# BIVARIATE ANALYSIS
# Let us compare Product and Age in a boxplot display

sns.boxplot(x="Product", y="Age", data=CGFPdf).set_title('Age Distribution by Product');

"""OBSERVATIONS ABOVE:

* TM195 and TM498 are preferred by customers of all ages but for TM798 customers are in the range of above 22 and below 38 (with some outliers).

* Model TM798 appeals to a narrower age range of customers, 22 years old to 38 years.

#### **Product vs. Education.**
"""

# Let us compare Product and Education in a boxplot display

sns.boxplot(x="Product", y="Education", data=CGFPdf).set_title('Education Distribution by Product');

"""OBSERVATIONS ABOVE:

* Customers buying TM798 have higher education as compared to the customers buying the other two other products.

* Customers that purchased the TM798 model appear have more years of education (14 to 20+ years) compared to buyers of TM195 (12 to 18 years) and TM498 (12 to 18 years too).

#### **Product vs. Income.**
"""

# Let us compare Product and Income in a boxplot display

sns.boxplot(x="Product", y="Income", data=CGFPdf).set_title('Income Distribution by Product');

"""OBSERVATIONS ABOVE:

* Customers with higher income prefer TM798, whereas TM195 and TM498 are prefered by middle income customers.

* TM798 buyers have the highest median incomes at 75,000+ Dollars. This is approximately 50% more than the customers of TM195 (median approx. 45,000+ Dollars) and TM498 (median approx. 50,000 Dollars).

* The income range for TM798 customers is also higher ranging from 49,000 Dollars to 105,000 Dollars; in comparison the income range of TM195 and tm498 is 30,000 Dollars to 68,000 Dollars.

#### **Product vs. Usage.**
"""

# Let us compare Product and Usage in a boxplot display

sns.boxplot(x="Product", y="Usage", data=CGFPdf).set_title('Usage Distribution by Product');

"""OBSERVATIONS ABOVE:

* Customers who have higher expected treadmill usage(greater than 3 days) prefer the TM798 product, Customers with very light(2-3 days) usage prefer TM498, customers who have moderate usage (greater than 2 days but less than or equal to 5 days) prefer TM195.

* Buyers of TM798 expect tO be the heaviest users of of their treadmilss compared to customers of TM196 and TM498. Their goal is to use the treadmill 3 to 6 times a week with a median of 5 times a week. 

* In comparison, buyers of TM195 and TM498 expect to use their treadmills between 2 to 5 times and 3 to 4 times respectively, with expected medians of 3 times a week.

#### **Product vs. Fitness**
"""

# Let us compare Product and Fitness in a boxplot display

# sns.boxplot(x="Product", y="Fitness", data=CGFPdf).set_title('Fitness Distribution by Product');

plt.figure(figsize=(15,7))
sns.countplot(CGFPdf["Product"],hue=CGFPdf["Fitness"],palette="gnuplot2_r")
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* Customers who purchased TM195 and TM498 gave themselves a balanced fitness rating of 3  (on a scale of 1 to 5, 1 being the least fit and 5 being the most fit), but for TM798 most of customers have rated themselves higher in fitness that is 5.
* TM798 treadmill customers rate their fitness levels more highly than the other 2 models.
* The median fitness rating for TM798 is 5, the highest a customer can rate themselves.
* TM195 and TM498 treadmill customers have a median fitness level rating of 3.

#### **Product vs. Miles.**
"""

# BIVARIATE ANALYSIS
# Let us compare Product and Miles in a boxplot display

sns.boxplot(x="Product", y="Miles", data=CGFPdf).set_title('Miles Distribution by Product');

"""OBSERVATIONS INCLUDE:

* Customers who expect to run higher miles go for TM798.
* They expect to register between 75 miles and 300 miles and a median of 160 miles. The median expected mileage of the TM195 and TM498 hovers at approximately 75 miles.

#### **Product vs. Miles Per Usage.**
"""

# Let us compare Product and Miles Per Usage in a boxplot display

sns.boxplot(x="Product", y="Miles Per Usage", data=CGFPdf).set_title('Miles Per Usage Distribution by Product');

"""OBSERVATIONS ABOVE:

* Analysis focused on the miles per usage per customer, TM798 customers expect to run more miles each time they run on the treadmill with a range of approximately 19 miles to 49 miles. They are more ambitious and driven than the buyers of the other 2 treadmill models.

#### **Product vs. Gender.**
"""

# BIVARIATE ANALYSIS
# Product Buyers by Gender
sns.countplot(x="Product", hue="Gender", data=CGFPdf);

"""OBSERVATIONS ABOVE:

* TM798 has been bought more by the male customers as compared to the female customers, for TM195 and TM498 there is equal distribution among genders.
* Treadmill purchases are more popular overall among males compared to females. 
* The TM195 treadmill model is an almost even split between genders, so is TM498.
* Quite noticeably, there is a a preference for the TM798 treadmill model among males.
"""

# Product Buyers by Marital Status
sns.countplot(x="Product", hue="MaritalStatus", data=CGFPdf);

"""OBSERVATIONS ABOVE:

* All the products are couple/partner friendly.
* Couples/partnered customers have a higher chance of buying a product when compared to single customers.
* More partnered customers (107) purchased treadmills compared to self declared single cusotomers (73) across all 3 treadmill model types.

#### **Pairplot Visualization.**
"""

# A pairplot visulaization represents pairwise relation across the entire dataframe and supports 
# an additional argument called hue for categorical separation. 
# It creates a jointplot between every possible numerical column.

sns.pairplot(CGFPdf);

"""### Building Customer Profiles by Grouping the Data along Product Lines."""

CGFPdf[CGFPdf["Product"]=="TM195"].describe(include="all")

"""#### **TM195 Customer.**

The TM195 customer is a regular customer (since this product is sold more than others).

* Early 20’s to early 30’s
* 12-18 years of educataion
* Income between 40K and 50K
* Plans to use treadmill three to four times per week for light usage.
* Has an average fitness level (rated 3)
"""

CGFPdf[CGFPdf["Product"]=="TM498"].describe(include="all")

"""#### **TM498 Customer.**

The TM498 customers is similar to the TM195 customer in most aspects. The differences are that these customers have a slightly higher annual income, a narrower usage, and a broader expectation of Miles to run each week.

With such a specific usage anticipation it is likely the TM498 customer is a working adult with a fixed or busy schedule (since these customers only tend to use the treadmill 3 times a week)

* Adult in their mid 20’s to early 30’s
* 12-18 years of educatation.
* Income around 50K.
* Plans to use treadmill three days a week for a light to moderate amount.
* Has an average fitness level.
"""

CGFPdf[CGFPdf["Product"]=="TM798"].describe(include="all")

"""#### **TM798 Customer.**

The TM798 model attracts a specific customer. In stark contrast to models T498 and T195, the T798 customer is predominantly male, highly educated and has higher salary.
* Generally preferred by Males in late 20’s
* Highly Educated
* Higher income earner
* Plans to use treadmill 4-5 days a week, running 160 miles on an average.
* Considers themselves very fit.

### Customer Segmentation.

#### **Usage vs Gender vs Marital Status.**
"""

plt.figure(figsize=(15,7))
sns.boxplot(CGFPdf["Gender"],CGFPdf["Usage"],hue=CGFPdf["MaritalStatus"],palette="viridis")
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* Usage for single females, single or partnered male is same it varies for females that have a partner.

#### **Gender vs. Income.**
"""

plt.figure(figsize=(15,7))
sns.boxplot(CGFPdf["Gender"],CGFPdf["Income"],palette="viridis")
plt.show()

"""OBSERVATIONS ABOVE:

* There is a large disparity in income of both the genders, there are more males with higher income than females.

#### **Gender vs. Income vs. Marital Status.**
"""

plt.figure(figsize=(15,7))
sns.boxplot(CGFPdf["Gender"],CGFPdf["Income"],hue=CGFPdf["MaritalStatus"],palette="viridis")
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* Males with a partner have higher income, while the income for single and partnered females is almost compareable.

#### **Gender vs. Miles.**
"""

plt.figure(figsize=(15,7))
sns.boxplot(CGFPdf["Gender"],CGFPdf["Miles"],palette="viridis")
plt.show()

"""OBSERVATIONS ABOVE:

* Males expect to run more miles than females.

#### **Gender vs. Miles vs. Marital Status.**
"""

plt.figure(figsize=(15,7))
sns.boxplot(CGFPdf["Gender"],CGFPdf["Miles"],hue=CGFPdf["MaritalStatus"],palette="viridis")
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* Single and Partnered male expect to run more miles, while not much difference can be noticed between Single or Partnered females.

#### **Gender vs. Miles vs. Education.**
"""

plt.figure(figsize=(15,7))
sns.boxplot(CGFPdf["Gender"],CGFPdf["Miles"],hue=CGFPdf["Education"])
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* The expected miles to run increases as the education level increases, indicating that the more educated customers are more fitness aware.

#### **Age vs. Miles vs. Gender.**
"""

plt.figure(figsize=(15,7))
sns.lineplot(CGFPdf["Age"],CGFPdf["Miles"],hue=CGFPdf["Gender"],ci=0)
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* With the increase in age the average expected miles to run decreases in females, whereas for males it shows an increasing and decreasing trend.
* As the age increases above 25, males expect to run more miles than females.
* After 30 there is a sharp decrease in the Average miles a female expects to run.

#### **Age vs. Miles vs. Marital Status.**
"""

plt.figure(figsize=(15,7))
sns.lineplot(CGFPdf["Age"],CGFPdf["Miles"],hue=CGFPdf["MaritalStatus"],ci=0)
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* The trend is mostly similar across younger years for a single or a customer with a partner, however after 40 years singles tend to work more on their fitness.

#### **Age vs. Income vs. Product.**
"""

plt.figure(figsize=(15,7))
sns.lineplot(CGFPdf["Age"],CGFPdf["Income"],hue=CGFPdf["Product"],ci=0)
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* TM195 and TM498 have simlilar income group customers[30,000-60,000] for all age groups but TM798 is purchased by higher income [greater than 60,000] customers only for all age groups.

#### **Income vs. Miles vs. Education.**
"""

plt.figure(figsize=(15,7))
sns.scatterplot(CGFPdf["Income"],CGFPdf["Miles"],hue=CGFPdf["Education"],ci=0.,palette="Dark2")
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

*  Customers having an income of more than 70k have 18-21 years of education and expect to run 100-200 miles a week.

#### **Income vs. Miles vs. Product.**
"""

plt.figure(figsize=(15,7))
sns.scatterplot(CGFPdf["Income"],CGFPdf["Miles"],hue=CGFPdf["Product"],ci=0,palette="inferno")
plt.legend(bbox_to_anchor=(1.00, 1))
plt.show()

"""OBSERVATIONS ABOVE:

* Customers having an income of more than 70k tend to buy TM798 and run more miles.

## Conclusion

### Key insights

#### **TM195:**

* An affordable and general-purpose treadmill that can be used for a wide range of users.

* It can be considered as an entry-level product generally targeted for first-time fitness enthusiasts or college-going population. 

* Customers with light to moderate usage 3 to 4 times a week go for this product.

</br>

#### **TM495:**

* An affordable product like the TM195 with more features and probably has a high price than TM195. 

* The product also generally targets the same age group as the TM195 but has users of slightly higher income.

* The product is used generally 3 times per week.

</br>

#### **TM798:**

* A top of the range treadmill with plenty of features that excite the fitness enthusiasts. 

* It has a higher price point and probably the flagship product of the company. 

* The buyers of the product are core users that rate themselves very highly on the fitness score as evident from the usage and expected miles to run. 

* The buyers in this segment are more educated, have an income (greater than 60,000) more than the other two treadmill users, and take their fitness very seriously. 

* Male customers prefer this product more than females.

</br>

## Business Recommendations.

**No pricing nor costs of the 3 treadmill models are provided in this data set. The following narrative can only make educate assumptions around these.**

<br/>

* The company has an affordable product in its portfolio that brings in the bulk of the volume of its sales, which is the TM195. The TM798 is their flagship product that brings in the profits for the company. 


* The company needs to engage in more marketing to convey that product TM798 is suitable for both the genders and try to lure the younger age group into buying their flagship product. Currently, it seems TM798 is marketed as an exclusive product for the males making more money as there is a large disparity in income for both genders.


* Years of education are proportionate to income, and so customers with higher education can be recommended an expensive model (TM798).


* Females above 30 years can be recommended the lower end products (TM195 and TM498) since they wish to run a fewer number of miles and therefore the usage of the product won't be higher.


* Partnered Females can be recommended all types of products (low end to high end) since their usage varies from 2 days per week to 6 days per week.


* Singles above 40 years can be recommended the higher end product (TM798) since they wish to run more miles and therefore the usage would be higher.


* Partnered males have a higher income and also expect to run more miles hence the higher end product TM798 would be a good recommendation for them.

## Extra Analysis

### A Baseline Linear Regression Model.
"""

# Predicts number of miles run based on usage and fitness level
# Import and load sklearn

from sklearn import linear_model

# Create the linear regression object
CGFPregr = linear_model.LinearRegression()

y = CGFPdf['Miles']
x = CGFPdf[['Usage','Fitness']]

# Animate the model

CGFPregr.fit(x,y)

# Calculate the linear regression coefficient

CGFPregr.coef_

# Calculate the y-intercept 

CGFPregr.intercept_

"""#### **Miles Predicted**


A predictive linear equation equation has been derived as follows:

Miles Predicted = -56.74 + 20.21 * [Usage] + 27.20 [Fitness]
"""